def dfs(graph, node, visited=None):
    if visited is None:
        visited = set()  # Initialize the visited set

    if node not in visited:
        print(node)  # Process the node (for example, print it)
        visited.add(node)  # Mark it as visited
        
        # Recur for all the adjacent nodes
        for neighbor in graph[node]:
            dfs(graph, neighbor, visited)
graph = {
    'A': ['B', 'C'],
    'B': ['A', 'D', 'E'],
    'C': ['A', 'F'],
    'D': ['B'],
    'E': ['B', 'F'],
    'F': ['C', 'E']
}
dfs(graph, 'A')
